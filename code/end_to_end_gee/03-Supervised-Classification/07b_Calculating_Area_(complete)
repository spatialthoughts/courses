// Replace this with your asset folder
var exportFolder = 'projects/spatialthoughts/assets/e2e/';

// Import Classified Image
var classifiedExportImage = 'embeddings_classification';
var classifiedExportImagePath = exportFolder + classifiedExportImage;

var classified = ee.Image(classifiedExportImagePath);
var geometry = classified.geometry();
Map.centerObject(geometry);

var palette = ['#cc6d8f', '#ffc107', '#1e88e5', '#004d40' ];
Map.addLayer(classified, {min: 0, max: 3, palette: palette}, 'Classification');

// .area() function calculates the area in square meters
var totalArea = geometry.area();

// We can cast the result to a ee.Number() and calculate the
// area in square kilometers
var totalAreaSqKm = totalArea.divide(1e6);
print(totalAreaSqKm);

// Area Calculation for Images
var vegetation = classified.eq(3);
// If the image contains values 0 or 1, we can calculate the
// total area using reduceRegion() function

// The result of .eq() operation is a binary image with pixels
// values of 1 where the condition matched and 0 where it didn't
Map.addLayer(vegetation, {min:0, max:1, palette: ['white', 'green']}, 'Green Cover');

// Since our image has only 0 and 1 pixel values, the vegetation
// pixels will have values equal to their area
var areaImage = vegetation.multiply(ee.Image.pixelArea());

// Now that each pixel for vegetation class in the image has the value
// equal to its area, we can sum up all the values in the region
// to get the total green cover.

var area = areaImage.reduceRegion({
  reducer: ee.Reducer.sum(),
  geometry: geometry,
  scale: 10,
  maxPixels: 1e10
});
// The result of the reduceRegion() function is a dictionary with the key
// being the band name. We can extract the area number and convert it to
// square kilometers
var vegetationAreaSqKm = area.getNumber('classification').divide(1e6);
print(vegetationAreaSqKm);
