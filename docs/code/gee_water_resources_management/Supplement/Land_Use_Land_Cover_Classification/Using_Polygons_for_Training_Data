/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var bangalore = ee.FeatureCollection("users/ujavalgandhi/public/bangalore_boundary"),
    urban = /* color: #cc6d8f */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Polygon(
                [[[77.60316485351039, 13.012947428059308],
                  [77.60312193816615, 13.012539748593689],
                  [77.60354036277248, 13.012414308623248],
                  [77.60364765113307, 13.012717455109831]]]),
            {
              "landcover": 0,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[77.51045740044863, 13.016598737217564],
                  [77.51060760415346, 13.01689142544246],
                  [77.50996387398989, 13.017246832108006],
                  [77.50978148377688, 13.017058675701502]]]),
            {
              "landcover": 0,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[77.53135580026654, 12.937488539697522],
                  [77.53108757936505, 12.936055997326896],
                  [77.53149527513531, 12.935961888416012],
                  [77.53183859788922, 12.9370075409869]]]),
            {
              "landcover": 0,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[77.6125371110244, 12.93503324121482],
                  [77.61258002636863, 12.935650179058522],
                  [77.61214014409019, 12.935681548738636]]]),
            {
              "landcover": 0,
              "system:index": "3"
            })]),
    bare = /* color: #ffc107 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Polygon(
                [[[77.59675499318077, 12.934541781162768],
                  [77.59642239926292, 12.933537944856615],
                  [77.59680863736106, 12.933276528489031],
                  [77.59692665455772, 12.93401895025732]]]),
            {
              "landcover": 1,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[77.54409028093421, 12.984298617380464],
                  [77.54344655077064, 12.983619072801998],
                  [77.54370404283607, 12.983420436343458],
                  [77.54414392511451, 12.98384907271352]]]),
            {
              "landcover": 1,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[77.58643891347157, 13.011192699401212],
                  [77.58654620183216, 13.010377334029213],
                  [77.58727576268421, 13.010356427189535],
                  [77.5871470166515, 13.011192699401212]]]),
            {
              "landcover": 1,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[77.59972121251332, 13.01073275003381],
                  [77.60006453526722, 13.010690936412662],
                  [77.6002576543163, 13.010962724824156],
                  [77.59982850087391, 13.01110907230696],
                  [77.59957100880848, 13.010837284055865]]]),
            {
              "landcover": 1,
              "system:index": "3"
            })]),
    water = /* color: #1e88e5 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Polygon(
                [[[77.58395679338926, 13.047165715879974],
                  [77.5846648965692, 13.045138045486501],
                  [77.58644588335508, 13.04630866135067],
                  [77.58588798387999, 13.047437464256747]]]),
            {
              "landcover": 2,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[77.57329166441143, 13.010905256711267],
                  [77.57344186811626, 13.008396428707448],
                  [77.57481515913189, 13.008438242715481],
                  [77.5743860056895, 13.009692659678588]]]),
            {
              "landcover": 2,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[77.61890226608058, 12.983994455879486],
                  [77.61748605972072, 12.982865364022766],
                  [77.6184731126382, 12.982154451703368],
                  [77.62001806503078, 12.983199910292901]]]),
            {
              "landcover": 2,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[77.61751415632641, 12.910679167175054],
                  [77.61669876478588, 12.909089605943207],
                  [77.61914493940746, 12.908838621666824],
                  [77.6195311775056, 12.910553675866366]]]),
            {
              "landcover": 2,
              "system:index": "3"
            })]),
    vegetation = /* color: #004d40 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Polygon(
                [[[77.64740649003528, 12.952597800639515],
                  [77.64858666200183, 12.950673916843076],
                  [77.64927330750965, 12.951384919107248],
                  [77.64805022019885, 12.952514153826879]]]),
            {
              "landcover": 3,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[77.58087043051519, 12.946425220201627],
                  [77.58135322813787, 12.94670753498042],
                  [77.58138541464605, 12.947313987868347],
                  [77.58068804030218, 12.946874832476208]]]),
            {
              "landcover": 3,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[77.59229863431707, 12.971905832642214],
                  [77.59268487241522, 12.97271086932984],
                  [77.5915476157929, 12.973400898702446],
                  [77.5905391052033, 12.971947652794038]]]),
            {
              "landcover": 3,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[77.59089365442605, 12.889335597072634],
                  [77.5909204765162, 12.88896954935101],
                  [77.5911726041636, 12.888938173807109],
                  [77.59116187532754, 12.889340826321922]]]),
            {
              "landcover": 3,
              "system:index": "3"
            })]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var s2 = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED');
var geometry = bangalore.geometry();
var rgbVis = {
  min: 0.0,
  max: 3000,
  bands: ['B4', 'B3', 'B2'],
};
 
var filtered = s2
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 30))
  .filter(ee.Filter.date('2019-01-01', '2020-01-01'))
  .filter(ee.Filter.bounds(geometry))
  .select('B.*');

var composite = filtered.median();

// Display the input composite.
Map.addLayer(composite.clip(geometry), rgbVis, 'image');

// Function to get exact number of random samples
// from polygons
var getPoints = function(polygons, nPoints, classProperty){
  // Generate N random points inside the polygons
  var points = ee.FeatureCollection.randomPoints(polygons, nPoints);
  // Get the class value propertie
  var classValue = polygons.first().get(classProperty);
  // Iterate over points and assign the class value
  var pointsWithClassProperty = points.map(function(point){
    return point.set(classProperty, classValue);
  });
  return pointsWithClassProperty;
};

// Extract random samples from each polygon
// This helps us get balanced samples for each class
var urbanPoints = getPoints(urban, 10, 'landcover');
var barePoints = getPoints(bare, 10, 'landcover');
var waterPoints = getPoints(water, 10, 'landcover');
var vegetationPoints = getPoints(vegetation, 10, 'landcover');

var gcps = urbanPoints
  .merge(barePoints)
  .merge(waterPoints)
  .merge(vegetationPoints);

// Overlay the point on the image to get training data.
var training = composite.sampleRegions({
  collection: gcps, 
  properties: ['landcover'], 
  scale: 10
});


// Train a classifier.
var classifier = ee.Classifier.smileRandomForest(50).train({
  features: training,  
  classProperty: 'landcover', 
  inputProperties: composite.bandNames()
});
// // Classify the image.
var classified = composite.classify(classifier);
Map.centerObject(geometry);
// Choose a 4-color palette
// Assign a color for each class in the following order
// Urban, Bare, Water, Vegetation
var palette = ['#cc6d8f', '#ffc107', '#1e88e5', '#004d40' ];

Map.addLayer(classified.clip(geometry), {min: 0, max: 3, palette: palette}, '2019');

// Display the chosen random samples
// We use the style() function to style the GCPs
var palette = ee.List(palette);
var landcover = ee.List([0, 1, 2, 3]);

var gcpsStyled = ee.FeatureCollection(
  landcover.map(function(lc){
    var color = palette.get(landcover.indexOf(lc));
    var markerStyle = { color: 'white', pointShape: 'diamond', 
      pointSize: 4, width: 1, fillColor: color};
    return gcps.filter(ee.Filter.eq('landcover', lc))
                .map(function(point){
                  return point.set('style', markerStyle);
                });
      })).flatten();
      
Map.addLayer(gcpsStyled.style({styleProperty:'style'}), {}, 'Point Samples');

