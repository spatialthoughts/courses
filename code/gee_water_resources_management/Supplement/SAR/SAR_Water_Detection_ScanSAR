// Script showing how to use PALSAR-2 SCANSAR data and
// static thresholding for water detection

var hydrobasins = ee.FeatureCollection("WWF/HydroSHEDS/v1/Basins/hybas_7");
var basin = hydrobasins.filter(ee.Filter.eq('HYBAS_ID', 4071139640));
var geometry = basin.geometry();
Map.addLayer(basin, {color: 'grey'}, 'Arkavathy Sub Basin');
Map.centerObject(geometry, 12);

// Preparing PALSAR-2 ScanSAR composite
// ****************************************************
var scansar = ee.ImageCollection('JAXA/ALOS/PALSAR-2/Level2_2/ScanSAR');
var scarsarFiltered = scansar
  .filter(ee.Filter.date('2019-01-01', '2020-01-01'))
  .filter(ee.Filter.bounds(geometry))
  .select(['HH', 'HV']);

var scarsarProjection = ee.Image(scarsarFiltered.first()).select('HH')
  .projection();

// The DN values for ScanSAR images
// can be converted to gamma naught values in decibel unit (dB)
// Î³0 = 10*log10(DN2) - 83.0 dB
var convertToDb = function(image) {
  var result = image.expression(
    '10*log10(DN**2) - 83', {
      'DN': image.select(['HH', 'HV'])
    });
  return result.copyProperties(image, ['system:time_start']);
};

var scansarDb = scarsarFiltered.map(convertToDb);

var scansarComposite = scansarDb.mean()
  .setDefaultProjection(scarsarProjection)
  .select('HV');
Map.addLayer(scansarComposite, {min:-30, max:0}, 'ScanSAR Composite');
var threshold = -27;
var scanSarWater = scansarComposite.lt(threshold);
Map.addLayer(scanSarWater.clip(geometry).selfMask(),
  {min:0, max:1, palette: ['blue']}, 'Water (ScanSAR)');

