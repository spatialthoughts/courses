// Example script that shows how to pre-process SAR data
// using Analysis Ready Data (ARD) Framework from
// https://github.com/adugnag/gee_s1_ard/tree/main

// Mullissa, A.; Vollrath, A.; Odongo-Braun, C.; Slagter, B.;
// Balling, J.; Gou, Y.; Gorelick, N.; Reiche, J. 
// Sentinel-1 SAR Backscatter Analysis Ready Data Preparation 
// in Google Earth Engine. Remote Sens. 2021, 13, 1954. 
// https://doi.org/10.3390/rs13101954

// This script applies GAMMA MAP filter with border noise
// removal and radiometric terrain correction
var admin2 = ee.FeatureCollection("FAO/GAUL_SIMPLIFIED_500m/2015/level2");
var hydrosheds = ee.Image("WWF/HydroSHEDS/03VFDEM");
    
var startDate = '2018-08-10';
var endDate = '2018-08-23';

var selected = admin2.filter(ee.Filter.eq('ADM2_NAME', 'Ernakulam'));
var geometry = selected.geometry();
Map.centerObject(geometry);
Map.addLayer(geometry, {color: 'grey'}, 'Selected Admin-2');

// ************************************************************
// Sentinel-1 ARD Pre-Processing
// ************************************************************
var wrapper = require('users/adugnagirma/gee_s1_ard:wrapper');
var helper = require('users/adugnagirma/gee_s1_ard:utilities');

//-----------------------------------------------------------//
// DEFINE PARAMETERS
//-----------------------------------------------------------//

var parameters = {
  //1. Data Selection
  START_DATE: '2018-08-10',
  STOP_DATE: '2018-08-23',
  POLARIZATION:'VVVH',
  ORBIT : 'DESCENDING',
  GEOMETRY: geometry, 
  
  //2. Additional Border noise correction
  APPLY_ADDITIONAL_BORDER_NOISE_CORRECTION: true,
  
  //3.Speckle filter
  APPLY_SPECKLE_FILTERING: true,
  SPECKLE_FILTER_FRAMEWORK: 'MULTI',
  SPECKLE_FILTER: 'GAMMA MAP',
  SPECKLE_FILTER_KERNEL_SIZE: 9,
  SPECKLE_FILTER_NR_OF_IMAGES: 10,
  
  //4. Radiometric terrain normalization
  APPLY_TERRAIN_FLATTENING: true,
  DEM: ee.Image('USGS/SRTMGL1_003'),
  TERRAIN_FLATTENING_MODEL: 'VOLUME',
  TERRAIN_FLATTENING_ADDITIONAL_LAYOVER_SHADOW_BUFFER: 0,
  
  //5. Output
  FORMAT : 'DB',
  CLIP_TO_ROI: true,
  SAVE_ASSETS: false
};

// Preprocess the S1 collection
var output = wrapper.s1_preproc(parameters);
var s1 = output[0];
var s1_preprocess = output[1];

// Function to add VV/VH ratio band
var addRatioBand = function(image) {
  var ratioBand = image.select('VV')
    .divide(image.select('VH')).rename('VV/VH');
  return image.addBands(ratioBand);
};

// Convert to DB and Add VV/VH ratio band
var speckleFiltered = s1_preprocess
  .map(helper.lin_to_db)
  .map(addRatioBand);

// Visualize
var sarComposite = speckleFiltered.mosaic().clip(geometry);

var visParams = {
  bands: ['VV', 'VH', 'VV/VH'],
  min:[-25, -25, 0],
  max:[0, 0, 2]
};
Map.addLayer(sarComposite, visParams, 'SAR RGB Visualization'); 
